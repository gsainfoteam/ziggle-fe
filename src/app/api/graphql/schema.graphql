scalar Date

type Tag {
  id: Int!
  name: String!
}

type Notice {
  id: Int!
  title: String!
  views: Int!
  body: String!
  deadline: Date
  createdAt: Date!
  author: String!
  tags: [Tag!]!
  imageUrl: String
}

type DetailedNotice {
  id: Int!
  title: String!
  views: Int!
  body: String!
  deadline: Date
  createdAt: Date!
  author: String!
  tags: [Tag!]!
  imagesUrl: [String!]!
  reminder: Boolean!
}

type Notices {
  list: [Notice!]!
  total: Int!
}

enum OrderBy {
  DEADLINE
  HOT
  RECENT
}

enum MineNotice {
  OWN
  REMINDERS
}

type Query {
  notices(offset: Int, limit: Int, search: String, tags: [String!], orderBy: OrderBy, my: MineNotice): Notices!
  notice(id: Int!): Notice
}

type Mutation {
  createNotice(
    title: String!
    body: String!
    deadline: Date
    images: [String!]
    tags: [Int!]
  ): DetailedNotice!
}
